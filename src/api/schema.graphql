type Dwelling {
  id: ID!
  sub_id: ID!
  name: String!
  address: Address!
  dwellingType: String!
  created: AWSDateTime!
  updated: AWSDateTime
  isDeleted: Boolean!          # New field for soft delete
  rooms: [Room]
  totalRooms: Int
  totalItems: Int
  totalValue: Float
}

type Room {
  id: ID!
  dwelling_id: ID!
  sub_id: ID!
  name: String!
  roomType: String!
  imageUrl: String
  thumbnailUrl: String
  created: AWSDateTime!
  updated: AWSDateTime
  isDeleted: Boolean!          # New field for soft delete
  items: [Item]
  itemCount: Int
  totalValue: Float
}

type Item {
  id: ID!
  room_id: ID!
  sub_id: ID!
  name: String!
  description: String
  details: ItemDetails
  price: Price!
  quantity: Int!
  retailer: String
  created: AWSDateTime!
  updated: AWSDateTime
  isDeleted: Boolean!          # New field for soft delete
}

type Address {
  line1: String!
  line2: String
  city: String!
  postCode: String!
}

type ItemDetails {
  brand: String
  model: String
  serialNumber: String
}

type Price {
  amount: Float!
  currency: String!
}

# Queries
type Query {
  getDwelling(id: ID!): Dwelling
  listDwellings: [Dwelling!]!
  getRoom(id: ID!): Room
  listRooms(dwelling_id: ID!): [Room!]!
  getItem(id: ID!): Item
  listItems(room_id: ID!): [Item!]!
  adminListDwellings: [Dwelling!]! # Only accessible by Admins
}

# Mutations
type Mutation {
  createDwelling(input: CreateDwellingInput!): Dwelling!
  updateDwelling(id: ID!, input: UpdateDwellingInput!): Dwelling!
  deleteDwelling(id: ID!): Boolean!

  createRoom(input: CreateRoomInput!): Room!
  updateRoom(id: ID!, input: UpdateRoomInput!): Room!
  deleteRoom(id: ID!): Boolean!

  createItem(input: CreateItemInput!): Item!
  updateItem(id: ID!, input: UpdateItemInput!): Item!
  deleteItem(id: ID!): Boolean!
}

# Input Types
input CreateDwellingInput {
  name: String!
  address: AddressInput!
  dwellingType: String!
}

input UpdateDwellingInput {
  name: String
  address: AddressInput
  dwellingType: String
}

input AddressInput {
  line1: String!
  line2: String
  city: String!
  postCode: String!
}

input CreateRoomInput {
  dwelling_id: ID!
  name: String!
  roomType: String!
}

input UpdateRoomInput {
  name: String
  roomType: String
}

input CreateItemInput {
  room_id: ID!
  name: String!
  description: String
  details: ItemDetailsInput
  price: PriceInput!
  quantity: Int!
  retailer: String
}

input UpdateItemInput {
  name: String
  description: String
  details: ItemDetailsInput
  price: PriceInput
  quantity: Int
  retailer: String
}

input ItemDetailsInput {
  brand: String
  model: String
  serialNumber: String
}

input PriceInput {
  amount: Float!
  currency: String!
}
